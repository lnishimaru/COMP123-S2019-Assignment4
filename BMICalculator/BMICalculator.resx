<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAHQSAAB0EgAAAAEAAAAB
        AAD///8A9PzpAOz62ADB8HwAvO5yANP0owD+/vwA+/72AM3ylAC+73YAxPCCAMTxgwDC8H4Avu91ANz2
        tQDc9rYAve90AMPwfwDF8YQAxPCDAMDwegDl+MgAwfB9AMHwewC/8HoAwfOGAPT64gDE8IQAw/CAAMTx
        hADD8ocAxPGFANTeWQDn1FsA9OKdAP389gDK8Y4Aw/CBAML0igDP5W0A39VLANzWSwDo2W0A8dqCAO/X
        dAD156wAy/KRAMLziQDJ7HsA29hSAN/VTADd11AA29dNAOjabQDy3IYA8NuDAPDafQDv2HcA9+2/AMzz
        kwDE8YgAxfGGANbeXwDg1EoA3ddPAN3YUQDn2msA8tyHAPHchADv2XsA+vPXAM3zlgDF8YcAwu5kANDd
        PwDe1EYA3dhTAOfaagDw2n4A8+GXAM/ymADF8YUAxfGKAMTucQDC6k0AwexPAM/fRgDb1DsA2dY+ANzX
        TQDm2mkA8NqAAPPimQDQ9JwAw/GFAMTwfwDD61YAwupLAMLqUADB7FIAzd9GANvUPADZ1T0A2dU7ANrW
        QQDc108A5dpoAPDbgADy4ZcAz/SeAMDsXgDC6koAwupPAMPrUQDN4EcA2tY+ANjWQADl2WYA8+CUAOzx
        jwDI6lEAvepLAM3hSADZ1j0A2NU7AOLWQwDv2WsA8dyHAPDbgQDy4JIA9PObAPbxhgDl73cAw+tSAL7q
        TADN4kkA19U7AN7WQgDr11EA69dPAO7aaADx348A9PSdAPDwfwDz8YYA9vGJAN7ubwDA6k0AvutOAMzi
        SQDa1DsA2tU+AOfXTQDt2FMA69hRAOrXTgDu2mcA8d6MAPT0nwDx8YQA8/GHAPTxiADW7mkAx+BCAOTU
        RADs2FMA7dpmAPHbgwDw2n8A9PSiAPPwhADt3FwA6tVKAOrXTwDt2mUA8NuCAP388wD09KUA8fSKAO/s
        egDr2VQA6tVLAOrXUADs2mQA8Nl8APrz1QD19acA8PB+APHxhQDv6HMA7NljAPHbhAD26bIA9fWmAPDw
        fQDx8oYA8fOJAO3kZgDq1FAA8uCUAP389AD5+dEA7+92APDwfADw8IMA7+95APLzjQD8/OkA9vawAO/v
        dADx8YMA7+94APj4yQD+/vgA9PSeAPDwgADw8IEA9PSmAPz86gDy8o0A7+9zAPHxiAD8/OsA+/veAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2tvc3d4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1dbR15/Y
        0dkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDRj9Kfn5/MwtPUAAAAAAAAAAAAAAAAAAAAAAAAAMnKy8yf
        n5+fn5+fzM3OzwAAAAAAAAAAAAAAAAAAAAAAwcKfn5+fn5+fn5/DxMXGx8gAAAAAAAAAAAAAAAAAAAC6
        u5+fn5+fn5+8sr2trL6/LMAAAAAAAAAAAAAAAAAAALGPn5+fn5+fsrO0tbabt383uLi5AAAAAAAAAAAA
        AAAAqY+fn5+foaqrrK2ampuuf0RErzmBsAAAAAAAAAAAAACej5+foKGio6Slmpqam6Z/REREp06oAAAA
        AAAAAAAAAI6PkJGSk5SVlpeYmZqbnH9EREREgJ0AAAAAAAAAAAAAgoOEhYZiY4dlZoiJiouMf0RERESA
        jQAAAAAAAAAAAAB3eHlwcXFjemVze2Z8fX5/RERERICBAAAAAAAAAAAAAG1ub3BxcWNyZXNzZmd0dUNE
        REREa3YAAAAAAAAAAAAAXV5fYGFiY2RlZmdoaWlqQ0RERERrbAAAAAAAAAAAAABQHFFSU1RVVldYWUxB
        NFpDRERERFtcAAAAAAAAAAAAAEccEhJISElKS0xBQUE0TUNERERETk8AAAAAAAAAAAAAOxwSEhISPD0+
        P0BBQTRCQ0REN0U4RgAAAAAAAAAAAAAuJRISEhISHS8wMTIzNDU2Nzg5OgAAAAAAAAAAAAAAACQlEhIS
        EhISEh8mJygpKissLQAAAAAAAAAAAAAAAAAAGxwSEhISEhISEh0eHyAhIiMAAAAAAAAAAAAAAAAAAAAC
        FhcTEhISEhISEgoYGRoAAAAAAAAAAAAAAAAAAAAAAAAADxAREhISEhMDFBUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwgJCgsMDQ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDBAUGAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>